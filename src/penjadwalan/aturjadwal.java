/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package penjadwalan;

import com.jaspersoft.ireport.designer.JrxmlLoader;
import java.io.File;
import static java.nio.file.Files.list;
import static java.rmi.Naming.list;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import static java.util.Collections.list;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.TableView;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import static org.eclipse.persistence.jpa.jpql.utility.CollectionTools.list;

/**
 *
 * @author ehazard
 */
public class aturjadwal extends javax.swing.JInternalFrame {

    Connection con;
    Statement stat;
    ResultSet rs;
    String sql;

    /**
     * Creates new form aturjadwal
     */
    public aturjadwal() throws SQLException {
        initComponents();
        koneksi ObjKoneksi = new koneksi();
        con = ObjKoneksi.bukaKoneksi();
        stat = con.createStatement();
        //UpdateTabel();
        tampil_database1();
        tampil_jadwal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jTextField1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        setMaximizable(true);
        setResizable(true);
        setTitle("Atur Jadwal");
        setFrameIcon(null);
        setPreferredSize(new java.awt.Dimension(900, 500));

        jButton1.setText("Buat Jadwal");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Pilih Kelas--", "X-IPA1", "X-IPA2", "X-IPS1", "X-IPS2", "XI-IPA1", "XI-IPA2", "XI-IPS1", "XI-IPS2", "XII-IPA1", "XII-IPA2", "XII-IPS1", "XII-IPS2" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox1KeyReleased(evt);
            }
        });

        jButton3.setText("Cetak Jadwal");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Pembelajaran", "Nama Kelas", "Hari", "Waktu Mulai", "Waktu Selesai", "Nama Pelajaran", "Nama Pengajar"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setHeaderValue("Id Pembelajaran");
        }

        jButton2.setText("Hapus Jadwal");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Cari Kelas");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Refresh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(0, 166, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jToggleButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //buat();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        // TODO add your handling code here:
        buat();
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            String sql1 = "TRUNCATE TABLE `jadwal`";
            Statement st = con.createStatement();
            st.executeUpdate(sql1);
            //tampil_database1();
            tampil_jadwal();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MousePressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked

    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jComboBox1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyReleased
        // TODO add your handling code here:    
    }//GEN-LAST:event_jComboBox1KeyReleased

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tabelnyo = new DefaultTableModel();
        tabelnyo.addColumn("Id pembelajaran");
        tabelnyo.addColumn("Nama Kelas");
        tabelnyo.addColumn("Hari");
        tabelnyo.addColumn("Waktu Mulai");
        tabelnyo.addColumn("Waktu Selesai");
        tabelnyo.addColumn("Nama Pelajaran");
        tabelnyo.addColumn("Nama pengajar");
        String kelasnya = "";
        int kelas = jComboBox1.getSelectedIndex();
        String cari = jTextField1.getText();
        if (kelas == 0) {
            kelasnya = "--Pilih kelas--";
        }
        if (kelas == 1) {
            kelasnya = "X-IPA1";
        }
        if (kelas == 2) {
            kelasnya = "X-IPA2";
        }
        if (kelas == 3) {
            kelasnya = "X-IPS1";
        }
        if (kelas == 4) {
            kelasnya = "X-IPS2";
        }
        if (kelas == 5) {
            kelasnya = "XI-IPA1";
        }
        if (kelas == 6) {
            kelasnya = "XI-IPA2";
        }
        if (kelas == 7) {
            kelasnya = "XI-IPS1";
        }
        if (kelas == 8) {
            kelasnya = "XI-IPS2";
        }
        if (kelas == 9) {
            kelasnya = "XII-IPA1";
        }
        if (kelas == 10) {
            kelasnya = "XII-IPA2";
        }
        if (kelas == 11) {
            kelasnya = "XII-IPS1";
        }
        if (kelas == 12) {
            kelasnya = "XII-IPS2";
        }

        try {

            String sql = "SELECT  jadwal.idjadwal,pembelajaran.nama_kelas,waktu.hari,waktu.waktu_mulai,waktu.waktu_selesai,pembelajaran.nama_pelajaran,pembelajaran.nama_pengajar FROM jadwal\n"
                    + "JOIN waktu ON waktu.idwaktu = jadwal.idwaktu\n"
                    + "JOIN pembelajaran ON pembelajaran.idpembelajaran = jadwal.idpembelajaran WHERE pembelajaran.nama_kelas = '" + kelasnya + "' "
                    + "and waktu.hari like '%" + cari + "%' or pembelajaran.nama_kelas = '" + kelasnya + "' and pembelajaran.nama_pelajaran like '%" + cari + "%' or pembelajaran.nama_kelas = '" + kelasnya + "' and pembelajaran.nama_pengajar like '%" + cari + "%'";

            ResultSet rs = stat.executeQuery(sql);
            rs = stat.executeQuery(sql);
            while (rs.next()) {
                tabelnyo.addRow(new Object[]{
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                    rs.getString(6),
                    rs.getString(7)
                });

            }
            jTable1.setModel(tabelnyo);

        } catch (Exception e) {
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        tampil_jadwal();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Map<String, Object> idjadwal = new HashMap<String, Object>();
        try {
            File file = new File("src/penjadwalan/report1.jrxml");
            JasperDesign jasdes = JRXmlLoader.load(file);
            idjadwal.clear();
            JasperReport jasrep = JasperCompileManager.compileReport(jasdes);
            JasperPrint jasprint = JasperFillManager.fillReport(jasrep, idjadwal, con);
            JasperViewer.viewReport(jasprint, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data Belum Ada", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

    static int[][] Kromosom;
    int[] cek;
    int cak;

    public void buat() {

        //Generate gen = new Generate();
        test test = new test();
        Generate2 gen2 = new Generate2();
        try {
            String sql1 = "TRUNCATE TABLE `jadwal`";
            Statement st = con.createStatement();
            st.executeUpdate(sql1);
            Kromosom = gen2.Gen(test.pembelajaran(), test.waktu(), 2);
            int[] fitness = new Fitness().GetFitness(Kromosom, test.pembelajaran(), test.waktu());
            for (int i = 0; i < Kromosom.length; i++) {
                System.out.println("\n individu ke: " + (i + 1) + " Fitnesss  :" + (fitness[i]));
                for (int j = 0; j < Kromosom[i].length; j++) {
                    System.out.print("Pembelajaran ke :" + (j + 1));
                    System.out.println("\t  waktu ke  :" + Kromosom[i][j] + "  " + test.hari.get(Kromosom[i][j] - 1) + "    " + test.waktu_ml.get(Kromosom[i][j] - 1) + "   " + test.waktu_sl.get(Kromosom[i][j] - 1));
                }
            }

            cek = function.tempKode;
            int evos = evolusi(Kromosom, fitness, cek);
            System.out.println("hmmm hmmm hmmm" + evos + "  fitnes      :" + fitness[evos]);
            for (int i = 0; i < Kromosom[evos].length; i++) {
                //System.out.println("Pembelajaran ke :" + (i + 1));
                //System.out.println("\t  waktu ke  :" + Kromosom[evos][i] + "  " + test.hari.get(Kromosom[evos][i] - 1) + "    " + test.waktu_ml.get(Kromosom[evos][i] - 1) + "   " + test.waktu_sl.get(Kromosom[evos][i] - 1));

                //kode DB
                rs = stat.executeQuery(sql);
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);
                String[] data = new String[20];

                while (rs.next()) {
                    data[0] = rs.getString("idPembelajaran");
                    data[1] = rs.getString("nama_kelas");
                    //System.out.println("idpembelajaran      :" + test.idpembelajaran.get(Kromosom[evos][i] - 1).toString());
                    //System.out.println("IdWaktu      :" + test.idwaktu.get(Kromosom[evos][i] - 1).toString());
                    data[2] = test.hari.get(Kromosom[evos][i] - 1).toString();
                    data[3] = test.waktu_ml.get(Kromosom[evos][i] - 1).toString();
                    data[4] = test.waktu_sl.get(Kromosom[evos][i] - 1).toString();
                    data[5] = rs.getString("nama_pelajaran");
                    data[6] = rs.getString("nama_pengajar");
                    dtm.addRow(data);
                    String sql = "insert into `jadwal`(`idjadwal`, `idpembelajaran`, `idwaktu`) VALUES (NULL,'" + data[0] + "','" + test.idwaktu.get(Kromosom[evos][i] - 1).toString() + "')";
                    Statement st1 = con.createStatement();
                    st1.executeUpdate(sql);
                    i++;
                }
                tampil_jadwal();
                JOptionPane.showMessageDialog(null, "Data BERHASIL TERSUSUN", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            }

            System.out.println(" ");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            System.out.println(e);
        }
    }

    static int j, k, l, m;

    //evolusi
    public int evolusi(int[][] Krom, int[] fit, int[] noslh) throws SQLException {
        function fu = new function();
        Random random = new Random();
        test test = new test();
        int maxiterasi = 15, max = 0;
        int maxFitness, idxMaxFitness = 0;

        for (int i = 0; i < maxiterasi; i++) {
            //int i = 0;
            //while (i < maxiterasi) {

            System.out.println("\n Iterasi ke  :" + (i + 1));
            for (j = 0; j < Krom.length; j++) {
                System.out.println("\n individu ke: " + (j + 1) + " Fitnesss  :" + (fit[j]));
                maxFitness = -999999;
                for (k = 0; k < Krom[j].length; k++) {
                    //System.out.print("Pembelajaran ke :" + (k + 1));
                    //System.out.println("\t  waktu ke  :" + Krom[j][k]);
                    //System.out.println("No  Slah" + noslh[k]);

                    //fitness sebelum mutasi
                    if (noslh[k] == 0) {
                        continue;
                    } else if (test.pembelajaran().get(1).get(k).toString().equals("1")) {
                        int temp = Krom[j][k];
                        Krom[j][k] = random.nextInt(45) + 1;
                        int[] fit2 = new Fitness().GetFitness(Krom, test.pembelajaran(), test.waktu());

                        if (fit2[j] < fit[j]) {
                            Krom[j][k] = temp;
                        } else {
                            fit[j] = fit2[j];
                        }
                        //System.out.println("\t  waktu ke  :" + Krom[j][k]);
                    } else {
                        int temp = Krom[j][k];
                        Krom[j][k] = random.nextInt(28) + 46;
                        int[] fit2 = new Fitness().GetFitness(Krom, test.pembelajaran(), test.waktu());

                        if (fit2[j] < fit[j]) {
                            Krom[j][k] = temp;
                        } else {
                            fit[j] = fit2[j];
                        }
                        //System.out.println("\t  waktu ke  :" + Krom[j][k]);
                    }
                }
                if (fit[j] > maxFitness) {
                    maxFitness = fit[j];
                    idxMaxFitness = j;
                }
                //System.out.println("max Fitnesss        :" + maxFitness);
                //System.out.println("idx ke J            :" + j);
            }
        }
        return idxMaxFitness;
    }

    public void tampil_database1() {
        //UpdateTabel();
        try {
            sql = "SELECT pembelajaran.idpembelajaran,pembelajaran.nama_kelas,pembelajaran.nama_pengajar,pembelajaran.nama_pelajaran from pembelajaran";
            rs = stat.executeQuery(sql);
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            String[] data = new String[10];

            int i = 1;
            while (rs.next()) {

                data[0] = rs.getString("idpembelajaran");
                data[1] = rs.getString("nama_kelas");
                //data[2] = rs.getString("hari");
                //data[3] = rs.getString("waktu_mulai");
                //data[4] = rs.getString("waktu_selesai");
                data[5] = rs.getString("nama_pelajaran");
                data[6] = rs.getString("nama_pengajar");
                dtm.addRow(data);
                i++;

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }

    public void tampil_jadwal() {
        DefaultTableModel tabelnyo = new DefaultTableModel();
        tabelnyo.addColumn("Id pembelajaran");
        tabelnyo.addColumn("Nama Kelas");
        tabelnyo.addColumn("Hari");
        tabelnyo.addColumn("Waktu Mulai");
        tabelnyo.addColumn("Waktu Selesai");
        tabelnyo.addColumn("Nama Pelajaran");
        tabelnyo.addColumn("Nama pengajar");
        try {

            String sql = "SELECT  jadwal.idjadwal,pembelajaran.nama_kelas,waktu.hari,waktu.waktu_mulai,waktu.waktu_selesai,pembelajaran.nama_pelajaran,pembelajaran.nama_pengajar FROM jadwal\n"
                    + "JOIN waktu ON waktu.idwaktu = jadwal.idwaktu\n"
                    + "JOIN pembelajaran ON pembelajaran.idpembelajaran = jadwal.idpembelajaran order by pembelajaran.nama_kelas,waktu.hari desc,waktu.waktu_mulai";

            ResultSet rs = stat.executeQuery(sql);
            rs = stat.executeQuery(sql);
            while (rs.next()) {
                tabelnyo.addRow(new Object[]{
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                    rs.getString(6),
                    rs.getString(7)
                });

            }
            jTable1.setModel(tabelnyo);
            jComboBox1.setSelectedIndex(0);
            jTextField1.setText("");

        } catch (Exception e) {
        }
    }

    public class test {

        public ArrayList<ArrayList> jadwal() throws SQLException {
            ArrayList idjadwal = new ArrayList();
            //ArrayList idpembelajaran = new ArrayList();
            //ArrayList idwaktu = new ArrayList();
            ArrayList<ArrayList> hasilData = new ArrayList<ArrayList>();
            Statement st = con.createStatement();
            String sql = "select * from jadwal ORDER BY idjadwal";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                idjadwal.add(rs.getString("idjadwal"));
                idpembelajaran.add(rs.getString("idpembelajaran"));
                idwaktu.add(rs.getString("idwaktu"));
            }
            rs.close();
            //con.close();
            hasilData.add(0, idjadwal);
            hasilData.add(1, idpembelajaran);
            hasilData.add(2, idwaktu);
            return hasilData;
        }
        //variable global
        ArrayList idwaktu = new ArrayList();
        ArrayList hari = new ArrayList();
        ArrayList waktu_ml = new ArrayList();
        ArrayList waktu_sl = new ArrayList();

        public ArrayList<ArrayList> waktu() throws SQLException {
            ArrayList<ArrayList> hasilData = new ArrayList<ArrayList>();
            Statement st = con.createStatement();
            String sql = "select * from waktu ORDER BY idwaktu";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                idwaktu.add(rs.getString("idwaktu"));
                hari.add(rs.getString("hari"));
                waktu_ml.add(rs.getString("waktu_mulai"));
                waktu_sl.add(rs.getString("waktu_selesai"));

            }
            rs.close();
            //con.close();
            hasilData.add(0, idwaktu);
            hasilData.add(1, hari);
            hasilData.add(2, waktu_ml);
            hasilData.add(3, waktu_sl);
            return hasilData;
        }
        //variable global
        ArrayList idpembelajaran = new ArrayList();
        ArrayList jatah = new ArrayList();
        ArrayList idpengajar = new ArrayList();
        ArrayList kelas = new ArrayList();
        ArrayList pelajaran = new ArrayList();

        public ArrayList<ArrayList> pembelajaran() throws SQLException {
            ArrayList<ArrayList> hasilData = new ArrayList<ArrayList>();

            Statement st = con.createStatement();
            String sql = "select * from pembelajaran ORDER BY idpembelajaran";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                idpembelajaran.add(rs.getString("idpembelajaran"));
                jatah.add(rs.getString("jatah_mengajar"));
                idpengajar.add(rs.getString("idpengajar"));
                kelas.add(rs.getString("nama_kelas"));
                pelajaran.add(rs.getString("nama_pelajaran"));

            }
            rs.close();
            //con.close();
            hasilData.add(0, idpembelajaran);
            hasilData.add(1, jatah);
            hasilData.add(2, idpengajar);
            hasilData.add(3, kelas);
            hasilData.add(4, pelajaran);
            return hasilData;
        }
    }
}
